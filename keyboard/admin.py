from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder

def get_users_keyboard(users, page: int) -> InlineKeyboardMarkup:
    keyboard = InlineKeyboardMarkup(row_width=1)

    for user in users:
        keyboard.add(InlineKeyboardButton(
            text=f"{user['FullName']} (ID: {user['Id']})",
            callback_data=f"user_{user['Id']}"
        ))

    # –ü–∞–≥–∏–Ω–∞—Ü–∏—è
    pagination = []
    if page > 0:
        pagination.append(InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"user_prev_{page - 1}"))
    pagination.append(InlineKeyboardButton("‚û°Ô∏è –î–∞–ª–µ–µ", callback_data=f"user_next_{page + 1}"))
    keyboard.row(*pagination)

    return keyboard


def main_menu_admin():
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")],
            [KeyboardButton(text="–ú–µ–Ω–µ–¥–∂–µ—Ä—ã")],
            [KeyboardButton(text="–¢–∞–±–ª–∏—Ü–∞")],[KeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑")]


        ],
        resize_keyboard=True,
        one_time_keyboard=False
    )


def statistic_menu_admin():
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text="üìÖ –ó–∞ —Å–µ–≥–æ–¥–Ω—è", callback_data="stat_today"),
                InlineKeyboardButton(text="üìä –ó–∞ –≤—Å–µ –≤—Ä–µ–º—è", callback_data="stat_all"),
                InlineKeyboardButton(text="üìä –ü–æ –º–µ—Å—è—Ü–∞–º", callback_data="stat_show_month")
            ]
        ]
    )



def statistic_menu_next():
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="stat_menu"),

            ]
        ]
    )







def get_manager_keyboard(users: list, page: int) -> InlineKeyboardMarkup:
    buttons = []

    # –ö–Ω–æ–ø–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    for user in users:
        buttons.append([
            InlineKeyboardButton(
                text=f"{user['Name']} (ID: {user['TelegramId']})",
                callback_data=f"manager_{user['TelegramId']}"
            )
        ])
    buttons.append([InlineKeyboardButton(
                    text="–î–æ–±–∞–≤–∏—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞",
                    callback_data=f"add_manager_admin"
                )])


    # –ö–Ω–æ–ø–∫–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
    pagination = []
    if page > 0:
        pagination.append(
            InlineKeyboardButton(
                text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                callback_data=f"manager_prev_{page - 1}"
            )
        )
    pagination.append(
        InlineKeyboardButton(
            text="‚û°Ô∏è –î–∞–ª–µ–µ",
            callback_data=f"manager_next_{page + 1}"
        )
    )
    if pagination:
        buttons.append(pagination)

    return InlineKeyboardMarkup(inline_keyboard=buttons)


def back_to_managers_button(id: int) -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É", callback_data=f"manager_prev_0"),InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞", callback_data=f"remove_manager_{id}") ]
        ]
    )


def confirm_cancel_kb():
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data="confirm"),
                InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="cancel"),
            ]
        ]
    )

def cancel_reply_keyboard():
    return ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞")]],
        resize_keyboard=True,
        one_time_keyboard=True
    )

def build_months_keyboard(months: list) -> InlineKeyboardMarkup:
    """
    –ü—Ä–∏–Ω–∏–º–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π —Å –∫–ª—é—á–∞–º–∏ "–ù–∞–∑–≤–∞–Ω–∏–µ" –∏ "–ö–ª—é—á"
    –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç InlineKeyboardMarkup.
    """
    builder = InlineKeyboardBuilder()

    for month in months:
        builder.button(
            text=month["Name"],
            callback_data=f"month_stat_{month['Key']}"
        )

    builder.adjust(2)  # –ø–æ 2 –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥
    return builder.as_markup()



