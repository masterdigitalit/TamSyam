from aiogram import Router, F
from aiogram.types import CallbackQuery
from db.manager import get_user_by_id, get_user_order_stats
from keyboard.manager import back_to_managers_button
from typing import Union, List
from aiogram.filters import BaseFilter, Command
from aiogram.types import Message
from db.manager import getManagersId

# –§–∏–ª—å—Ç—Ä
class ChatTypeFilter(BaseFilter):
    def __init__(self, user_id: Union[int, List[int]]):
        if isinstance(user_id, int):
            self.user_ids = [user_id]
        else:
            self.user_ids = user_id or []

    async def __call__(self, message: Message) -> bool:

        print(f"[FILTER] from_user.id = {message.from_user.id}")
        print(f"[FILTER] self.user_ids = {self.user_ids}")

        if not self.user_ids:
            return False
        return message.from_user.id in self.user_ids

# –í–∞—à–∞ —Ñ—É–Ω–∫—Ü–∏—è, –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∞—è —Å–ø–∏—Å–æ–∫ ID –∞–¥–º–∏–Ω–æ–≤


# –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è –∞–¥–º–∏–Ω–æ–≤


router = Router()

@router.callback_query(F.data.startswith("user_"), ChatTypeFilter(getManagersId()))
async def handle_user_detail(callback: CallbackQuery):
    try:
        user_id = int(callback.data.split("_")[1])
    except (IndexError, ValueError):
        await callback.answer("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
        return
    print(user_id)
    user = get_user_by_id(user_id)
    print(user)

    if not user:
        await callback.answer("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return

    stats = get_user_order_stats(str(user['TelegramId']))

    text = (
        f"üë§ <b>–ü—Ä–æ—Ñ–∏–ª—å –º–∞—Å—Ç–µ—Ä–∞</b>\n\n"
        f"üÜî ID: <code>{user['Id']}</code>\n"
        f"üìõ –ò–º—è: <b>{user['Name']}</b>\n"
        # f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: <code>{user['Phone']}</code>\n\n"
        f"üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–∫–∞–∑–æ–≤:</b>\n"
            f"‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ: <b>{stats['count']}</b>\n"
        # f"üí∏ –ö–ª–∏–µ–Ω—Ç –∑–∞–ø–ª–∞—Ç–∏–ª: <b>{stats['total_price']} ‚ÇΩ</b>\n"
        # f"üë∑ –ú–∞—Å—Ç–µ—Ä –ø–æ–ª—É—á–∏–ª: <b>{stats['total_worker_price']} ‚ÇΩ</b>\n"
        # f"–∫–∞—Å—Å–∞ : <b>{stats['total_price'] - stats['total_worker_price']} ‚ÇΩ</b>"
    )

    # –í–æ–∑–≤—Ä–∞—Ç –Ω–∞ —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –ø–µ—Ä–µ–¥–∞—ë–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, 0)
    keyboard = back_to_managers_button(id=user['TelegramId'])

    await callback.message.edit_text(text, reply_markup=keyboard, parse_mode="HTML")
    await callback.answer()
