from aiogram import Router, F
from aiogram.fsm.state import StatesGroup, State
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.fsm.context import FSMContext
from aiogram.filters import Command
from db.manager import addOrderFromManager  # üíæ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
from create_bot import bot
from typing import Union, List
from aiogram.filters import BaseFilter, Command
from aiogram.types import Message
from db.manager import getManagersId

# –§–∏–ª—å—Ç—Ä
class ChatTypeFilter(BaseFilter):
    def __init__(self, user_id: Union[int, List[int]]):
        if isinstance(user_id, int):
            self.user_ids = [user_id]
        else:
            self.user_ids = user_id or []

    async def __call__(self, message: Message) -> bool:

        print(f"[FILTER] from_user.id = {message.from_user.id}")
        print(f"[FILTER] self.user_ids = {self.user_ids}")

        if not self.user_ids:
            return False
        return message.from_user.id in self.user_ids

# –í–∞—à–∞ —Ñ—É–Ω–∫—Ü–∏—è, –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∞—è —Å–ø–∏—Å–æ–∫ ID –∞–¥–º–∏–Ω–æ–≤


# –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è –∞–¥–º–∏–Ω–æ–≤


router = Router()


# ==== –°–æ—Å—Ç–æ—è–Ω–∏—è FSM ====
class AddOrderManagerState(StatesGroup):
    adress = State()
    name = State()
    phone = State()
    desc = State()
    confirm = State()


# ==== –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –æ—Ç–º–µ–Ω—ã ====
def cancel_keyboard(callback: str = "cancel_add_order"):
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data=callback)]
    ])


# ==== –°—Ç–∞—Ä—Ç FSM ====
@router.callback_query(F.data == "add_order_manager", ChatTypeFilter(getManagersId()))
async def start_add_order(callback: CallbackQuery, state: FSMContext):
    await state.set_state(AddOrderManagerState.adress)
    await callback.message.edit_text("üìç –í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –∑–∞–∫–∞–∑–∞:", reply_markup=cancel_keyboard())
    await callback.answer()


# ==== –ê–¥—Ä–µ—Å ====
@router.message(AddOrderManagerState.adress, ChatTypeFilter(getManagersId()))
async def add_adress(msg: Message, state: FSMContext):
    await state.update_data(adress=msg.text)
    await state.set_state(AddOrderManagerState.name)
    await msg.answer("üôç‚Äç‚ôÇÔ∏è –í–≤–µ–¥–∏—Ç–µ –∏–º—è –∫–ª–∏–µ–Ω—Ç–∞:", reply_markup=cancel_keyboard())


# ==== –ò–º—è ====
@router.message(AddOrderManagerState.name, ChatTypeFilter(getManagersId()))
async def add_name(msg: Message, state: FSMContext):
    await state.update_data(name=msg.text)
    await state.set_state(AddOrderManagerState.phone)
    await msg.answer("üìû –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:", reply_markup=cancel_keyboard())


# ==== –¢–µ–ª–µ—Ñ–æ–Ω ====
@router.message(AddOrderManagerState.phone, ChatTypeFilter(getManagersId()))
async def add_phone(msg: Message, state: FSMContext):
    await state.update_data(phone=msg.text)
    await state.set_state(AddOrderManagerState.desc)
    await msg.answer("üìù –í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞:", reply_markup=cancel_keyboard())


# ==== –û–ø–∏—Å–∞–Ω–∏–µ ====
@router.message(AddOrderManagerState.desc, ChatTypeFilter(getManagersId()))
async def add_desc(msg: Message, state: FSMContext):
    await state.update_data(desc=msg.text)
    data = await state.get_data()

    text = (
        f"üÜï –ù–æ–≤—ã–π –∑–∞–∫–∞–∑:\n\n"
        f"üìç –ê–¥—Ä–µ—Å: {data['adress']}\n"
        f"üôç‚Äç‚ôÇÔ∏è –ò–º—è: {data['name']}\n"
        f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {data['phone']}\n"
        f"üìù –û–ø–∏—Å–∞–Ω–∏–µ: {data['desc']}\n\n"
        f"–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å?"
    )
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data="confirm_add_order")],
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_add_order")]
    ])
    await state.set_state(AddOrderManagerState.confirm)
    await msg.answer(text, reply_markup=kb)


# ==== –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ ====
@router.callback_query(F.data == "confirm_add_order", ChatTypeFilter(getManagersId()))
async def confirm_add(callback: CallbackQuery, state: FSMContext):
    data = await state.get_data()

    # üß† –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –ë–î
    addOrderFromManager(
        adress=data['adress'],
        name=data['name'],
        phone=data['phone'],
        desc=data['desc']
    )

    await callback.message.edit_text("‚úÖ –ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω.")
    await state.clear()
    await callback.answer()


# ==== –û—Ç–º–µ–Ω–∞ ====
@router.callback_query(F.data == "cancel_add_order", ChatTypeFilter(getManagersId()))
async def cancel_add(callback: CallbackQuery, state: FSMContext):
    await state.clear()

    await callback.answer()
    await callback.message.edit_text(
        text="‚ùå –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ.",
        parse_mode="HTML",
        reply_markup=InlineKeyboardMarkup(
            inline_keyboard=[
                [InlineKeyboardButton(text="‚¨Ö –ù–∞–∑–∞–¥ –∫ –∑–∞–∫–∞–∑–∞–º", callback_data="page_manager_0")]
            ]
        )
    )
