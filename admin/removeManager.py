from aiogram import Router, F
from aiogram.types import CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton, Message
from aiogram.fsm.context import FSMContext
from aiogram.filters import BaseFilter
from typing import Union, List

from db.admin import delete_manager_by_id, getOwnersId


router = Router()


class ChatTypeFilter(BaseFilter):
    def __init__(self, user_id: Union[int, List[int]]):
        self.user_ids = [user_id] if isinstance(user_id, int) else user_id or []

    async def __call__(self, message_or_callback: Union[Message, CallbackQuery]) -> bool:
        user_id = (
            message_or_callback.from_user.id
            if isinstance(message_or_callback, (Message, CallbackQuery))
            else None
        )
        return user_id in self.user_ids


def get_remove_manager_confirm_kb(manager_id: int):
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ", callback_data=f"confirm_remove_manager_{manager_id}")],
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data=f"cancel_remove_manager_{manager_id}")]
    ])


@router.callback_query(F.data.startswith("remove_manager_"), ChatTypeFilter(user_id=getOwnersId()))
async def start_remove_manager(callback: CallbackQuery, state: FSMContext):
    manager_id = callback.data.split("_")[-1]

    if not manager_id.isdigit():
        await callback.answer("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π ID –º–µ–Ω–µ–¥–∂–µ—Ä–∞.")
        return

    manager_id = int(manager_id)

    await callback.message.edit_text(
        f"‚ö†Ô∏è –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Å ID <code>{manager_id}</code>?",
        reply_markup=get_remove_manager_confirm_kb(manager_id),
        parse_mode="HTML"
    )


@router.callback_query(F.data.startswith("confirm_remove_manager_"), ChatTypeFilter(user_id=getOwnersId()))
async def confirm_remove_manager(callback: CallbackQuery, state: FSMContext):
    manager_id = callback.data.split("_")[-1]

    if not manager_id.isdigit():
        await callback.answer("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π ID.")
        return

    manager_id = int(manager_id)
    success = delete_manager_by_id(manager_id)  # üíæ

    if success:
        await callback.message.edit_text(
            f"‚úÖ –ú–µ–Ω–µ–¥–∂–µ—Ä —Å ID <code>{manager_id}</code> —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω.",
            parse_mode="HTML"
        )
    else:
        await callback.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω —É–∂–µ —É–¥–∞–ª—ë–Ω.", show_alert=True)

    await state.clear()


@router.callback_query(F.data.startswith("cancel_remove_manager_"), ChatTypeFilter(user_id=getOwnersId()))
async def cancel_remove_manager(callback: CallbackQuery, state: FSMContext):
    await callback.message.edit_text("‚ùå –£–¥–∞–ª–µ–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ.")
    await state.clear()
